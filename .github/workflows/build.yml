name: Build and Deploy Package (New)

on:
  push:
    branches:
  release:
    types: [created]
  pull_request:

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Build sdist
        run: |
          pip install -r requirements.txt
          python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }} CIBW_BUILD=${{ matrix.cibw_build }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        cibw_build: [cp38-*, cp39-*, cp310-*, cp311-*]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Setup QEMU  # Needed to build aarch64 wheels
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3
        env:
          CIBW_ARCHS_LINUX: "x86_64 i686 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64 x86"
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_SKIP: "*-musllinux_aarch64"
          CIBW_BEFORE_BUILD: pip install -r requirements.txt
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/test"
          CIBW_TEST_SKIP: "*-macosx_arm64"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl


  upload_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          user: __token__
          password: ${{ secrets.pypi_api_token }}
